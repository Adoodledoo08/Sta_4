# Add the needed packages (including those needed in case of an unbalanced design)
library(car)
library(multcompView)
library(lsmeans)
library(ggplot2)
# library(sjstats) # This is needed for the partial eta squared

# Set your working directory to where your file is; in our case, it's "C:\Users\saman\Downloads\KUL Masters - 1st Sem\Statistics 4\Data Assignment 1"
setwd("C:/Users/wulif/OneDrive/Documents/sta4")

# Import the file and prepare it for the analysis (deliminate as needed, convert to factors, etc.)
housing_data<-read.table("Dataset.106.csv", header=TRUE, sep=",")
housing_data$Area<- factor(ifelse(housing_data$Area=="Suburban" | housing_data$Area == "Rural","Rural","Urban"))
housing_data$LivingWith<-as.factor(housing_data$LivingWith)
housing_data$Area<-as.factor(housing_data$Area)

# It's good practice to first check the visualization of your data. We can use a box plot (we will use the package ggplot2 here for better visualization)...

ggplot(data=housing_data, aes(x=LivingWith, y=PHQ9, colour=Area)) + geom_boxplot()

# Or, to better explore a possible interaction effect, an interaction plot
with(housing_data, interaction.plot(x.factor=LivingWith, trace.factor=Area, response=PHQ9, fun=mean,type="b", legend=T, ylab="PHQ9 Score", main="Interaction Plot", pch=c(19,19), col=c(2,1)))

# Check the unbalancedness of the design with a frequency table before proceeding with the analysis
ffreq<-table(list(housing_data$LivingWith, housing_data$Area)) # Here we see that we have an unblanaced design

# Because our design is unbalanced, we have to create a model and then run our analysis
result1<-anova(lm(PHQ9 ~ LivingWith*Area, data=housing_data)) #This also allows us to test our interaction effect (if any) using Type 1 SS.

#We can also use the following code and test for Type 2 because we know the interaction effect is not significant.
housing_model<-lm(PHQ9 ~ LivingWith*Area, data=housing_data)
result2<-Anova(housing_model, type=2) 

# Eta squared
#eta_sq(result2, partial = TRUE)


# The results from above shows us that there's no interaction effect, there's no main effect for Area,and there's a main effect for LivingWith.
# Proceed with performing comparisons within LivingWith
contrast1<-c(.5, -1, .5) # coefficients (-1 for living alone and 1/2 each for with friends and with family)
contrast2<-c(-1, 0, 1) # coefficients (0 for living alone, 1 for with friends, and -1 for family)
contrasts(housing_data$LivingWith)<-cbind(contrast1, contrast2) # This assigns the contrast coefficients to the levels
contrasts(housing_data$LivingWith) # This line checks if the contrasts were assigned correctly
result3<-lm(PHQ9 ~ LivingWith + Area, housing_data)
summary.lm(result3)



##### Confidence interval(add on Nov.06)
model<-aov(PHQ9 ~ LivingWith+Area, data=housing_data)
CI <- TukeyHSD(model,conf.level=.95)




# Check assumptions ----
# Homogeneity of variances
plot(modelTest, 1)
leveneTest(PHQ9 ~ LivingWith*Area, data=housing_data)

#Check the normality assumption
plot(modelTest, 2)


# Check outliers (I = 25-1.5IQR, 75+1.5IQR)
boxplot(housing_data)
summary(housing_data$PHQ9)
outliersPHQ9<-boxplot.stats(housing_data$PHQ9)$out
outrows<-which(housing_data$PHQ9 %in% c(outliersPHQ9)) # Tells us the rows of the outliers
outrows
housing_data[outrows,] # This extracts the outlier rows from the dataframe
boxplot(housing_data$PHQ9,
        ylqb = "PHQ9",
        main = "Boxplot of PHQ9 scores")
mtext(paste("Outliers: ", paste(outliersPHQ9, collapse = ", ")))

# Find the lower and upper bound
lower_bound<-quantile(housing_data$PHQ9, 0.025)
lower_bound
upper_bound<-quantile(housing_data$PHQ9, 0.975)
upper_bound

# Check outliers based on our lower and upper bound
outlier_ind<-which(housing_data$PHQ9 < lower_bound | housing_data$PHQ9 > upper_bound)
outlier_ind # This tells us the rows that have outliers

housing_data[outlier_ind, "PHQ9"] # This tells us the numbers that are beyond our IQR
housing_data[outlier_ind, ]

iqr<-IQR(housing_data$PHQ9)
upper<-quantile(housing_data$PHQ9, 0.75) + 1.5*iqr
lower<-quantile(housing_data$PHQ9, 0.25) - 1.5*iqr

housing_data2<-subset(housing_data, subset = PHQ9 > lower & PHQ9 < upper)
housing_data2
boxplot(housing_data2)
ggplot(data=housing_data2, aes(x=LivingWith, y=PHQ9, colour=Area)) + geom_boxplot()

# ANOTHER METHOD (shorter BUT it doesn't show which rows have outliers; it automatically removes it)
outliers<-boxplot(housing_data$LivingWith, plot=FALSE)$out
outrows2<-housing_data[-which(housing_data$PHQ9 %in% outliersPHQ9),]
boxplot(outrows2)
ggplot(data=outrows2, aes(x=LivingWith, y=PHQ9, colour=Area)) + geom_boxplot()
